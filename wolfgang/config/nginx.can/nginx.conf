
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    gzip  on;

    server {
          listen 80;
          server_name files.can www.files.can *.files.can;
          access_log logs/files.access.log main;
          error_log logs/files.error.log warn;

          location / {
            proxy_pass http://files/;
          }
        }

    server {
      listen 80;
      server_name torrent.can www.torrent.can *.torrent.can;
      access_log logs/torrent.access.log main;
      error_log logs/torrent.error.log warn;

      location / {
        proxy_pass http://rtorrent:8080/;
      }
    }

    server {
        listen 80;
        server_name git.can www.git.can *.git.can;
        access_log logs/git.access.log main;
        error_log logs/git.error.log warn;
        client_max_body_size 500M; # Push large objects to gitea


        location / {
            proxy_pass http://git:3000/;
        }
    }

    server {
            listen 80;
            server_name plex.can www.plex.can *.plex.can;
            access_log logs/plex.access.log main;
            error_log logs/plex.error.log warn;


            location / {
                proxy_pass http://192.168.0.50:32400/; # Hardcoded local ip for now. will be another container later
            }
        }


    # DNS admin interface
    server {
        listen       80;
        server_name  dns.can www.dns.can *.pihole.can;

        access_log  logs/dns.access.log  main;
        error_log logs/dns.error.log warn;

        location / {
             proxy_pass http://dns/;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
